// <auto-generated />
using System;
using LittleLearningSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LittleLearningSystem.Migrations
{
    [DbContext(typeof(LittleLearningContext))]
    [Migration("20240718100508_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LittleLearningSystem.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int?>("AmountLimit")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CourseTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CourseWeek")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CourseId")
                        .HasName("PK__Course__C92D71A72310B94D");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("LittleLearningSystem.Models.Enroll", b =>
                {
                    b.Property<int>("EnrollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Score")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("EnrollId")
                        .HasName("PK__Enroll__405B562C4C58DEEE");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enroll", (string)null);
                });

            modelBuilder.Entity("LittleLearningSystem.Models.Ha", b =>
                {
                    b.Property<int>("HasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HasId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.HasKey("HasId")
                        .HasName("PK__Has__C8ABBCAD3C393339");

                    b.HasIndex("CourseId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Has");
                });

            modelBuilder.Entity("LittleLearningSystem.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FileName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FileType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("MaterialId")
                        .HasName("PK__Material__C50610F7CA45FD2A");

                    b.ToTable("Material", (string)null);
                });

            modelBuilder.Entity("LittleLearningSystem.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Spassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SPassword");

                    b.Property<string>("StudentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StudentId")
                        .HasName("PK__Student__32C52B99986BB5C6");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("LittleLearningSystem.Models.Enroll", b =>
                {
                    b.HasOne("LittleLearningSystem.Models.Course", "Course")
                        .WithMany("Enrolls")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_Course");

                    b.HasOne("LittleLearningSystem.Models.Student", "Student")
                        .WithMany("Enrolls")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LittleLearningSystem.Models.Ha", b =>
                {
                    b.HasOne("LittleLearningSystem.Models.Course", "Course")
                        .WithMany("Has")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_CourseMaterial");

                    b.HasOne("LittleLearningSystem.Models.Material", "Material")
                        .WithMany("Has")
                        .HasForeignKey("MaterialId")
                        .HasConstraintName("FK_Material");

                    b.Navigation("Course");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("LittleLearningSystem.Models.Course", b =>
                {
                    b.Navigation("Enrolls");

                    b.Navigation("Has");
                });

            modelBuilder.Entity("LittleLearningSystem.Models.Material", b =>
                {
                    b.Navigation("Has");
                });

            modelBuilder.Entity("LittleLearningSystem.Models.Student", b =>
                {
                    b.Navigation("Enrolls");
                });
#pragma warning restore 612, 618
        }
    }
}
